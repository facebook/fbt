// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should accept well-formed options" 1`] = `
Array [
  Object {
    "author": "jwatson",
    "col_beg": 2,
    "col_end": 8,
    "desc": "options!",
    "filepath": undefined,
    "jsfbt": "A string that moved files",
    "line_beg": 2,
    "line_end": 5,
    "project": "Super Secret",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should be able to nest within React nodes" 1`] = `
Array [
  Object {
    "col_beg": 20,
    "col_end": 55,
    "desc": "nested!",
    "filepath": undefined,
    "jsfbt": "A nested string",
    "line_beg": 3,
    "line_end": 3,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should convert simple strings" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "It's simple",
    "filepath": undefined,
    "jsfbt": "A simple string",
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should deduplicate branches when fbt.enum() calls share the same key" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "groups",
            "photos",
            "videos",
          ],
        },
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 18,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should get project from docblock" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 52,
    "desc": "It's simple",
    "filepath": undefined,
    "jsfbt": "Also simple string",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle duplicate enums" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "groups",
            "photos",
            "videos",
          ],
        },
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 19,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle enums (with array values)" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enum as an array",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "groups",
            "photos",
            "videos",
          ],
        },
      ],
      "t": Object {
        "groups": "Click to see groups",
        "photos": "Click to see photos",
        "videos": "Click to see videos",
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle enums (with value map)" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enum as an object",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "id1",
            "id2",
            "id3",
          ],
        },
      ],
      "t": Object {
        "id1": "Click to see groups",
        "id2": "Click to see photos",
        "id3": "Click to see videos",
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle enums with more text after" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "groups",
            "photos",
            "videos",
          ],
        },
      ],
      "t": Object {
        "groups": "Hello, groups!",
        "photos": "Hello, photos!",
        "videos": "Hello, videos!",
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle multiple plurals with no showCount (i.e. no named params)" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 2,
        },
        Object {
          "singular": true,
          "token": "number",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "There are {number} likes",
        },
        "_1": Object {
          "_1": "There is a like",
        },
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle names" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "names",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "name",
          "type": 1,
        },
      ],
      "t": Object {
        "*": "You just friended {name}",
      },
    },
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle object pronoun" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 9,
    "desc": "object pronoun",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 3,
        },
      ],
      "t": Object {
        "*": "You wished them a happy birthday.",
        "3": "You wished her a happy birthday.",
        "4": "You wished him a happy birthday.",
      },
    },
    "line_beg": 2,
    "line_end": 9,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle params" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "Moar params",
    "filepath": undefined,
    "jsfbt": "A parameterized message to {personName}",
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle plurals that have different count variables" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "singular": true,
          "token": "cat_token",
          "type": 2,
        },
        Object {
          "singular": true,
          "token": "dog_token",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "{cat_token} cats and {dog_token} dogs",
          "_1": "{cat_token} cats and 1 dog",
        },
        "_1": Object {
          "*": "1 cat and {dog_token} dogs",
          "_1": "1 cat and 1 dog",
        },
      },
    },
    "line_beg": 2,
    "line_end": 9,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle plurals that share the same count variable" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 2,
        },
        Object {
          "singular": true,
          "token": "number",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "There were {number} likes",
        },
        "_1": Object {
          "_1": "There was a like",
        },
      },
    },
    "line_beg": 2,
    "line_end": 9,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle possessive pronoun" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 9,
    "desc": "possessive pronoun",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 3,
        },
      ],
      "t": Object {
        "*": "It is their birthday.",
        "3": "It is her birthday.",
        "4": "It is his birthday.",
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle subject and reflexive pronouns" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 9,
    "desc": "subject+reflexive pronouns",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 3,
        },
        Object {
          "type": 3,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "They wished themselves a happy birthday.",
        },
        "3": Object {
          "3": "She wished herself a happy birthday.",
        },
        "4": Object {
          "4": "He wished himself a happy birthday.",
        },
      },
    },
    "line_beg": 2,
    "line_end": 9,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle variations + same param" 1`] = `
Array [
  Object {
    "col_beg": 6,
    "col_end": 7,
    "desc": "test variations + sameParam",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "count",
          "type": 2,
        },
      ],
      "t": Object {
        "*": "You have {count} likes. Comment on it to get more than {count} likes",
      },
    },
    "line_beg": 3,
    "line_end": 11,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle variations" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "variations!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "count",
          "type": 2,
        },
      ],
      "t": Object {
        "*": "Click to see {count} links",
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handler wrapping parens" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 14,
    "col_end": 7,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 8,
    "line_end": 13,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 14,
    "col_end": 7,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 14,
    "line_end": 19,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should insert param in place of fbt.sameParam if it exists" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "d",
    "filepath": undefined,
    "jsfbt": "{name1} and {name1}",
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should maintain intra-argument newlines" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "a",
    "filepath": undefined,
    "jsfbt": "{name1} blah {name2}",
    "line_beg": 2,
    "line_end": 17,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should maintain newlines when using string templates" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "blah",
    "filepath": undefined,
    "jsfbt": "A simple string... with some other stuff.",
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data (react native) for scenario "should maintain newlines within arguments" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "a",
    "filepath": undefined,
    "jsfbt": "a b {name1} c d {name2} e",
    "line_beg": 2,
    "line_end": 13,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should accept well-formed options" 1`] = `
Array [
  Object {
    "author": "jwatson",
    "col_beg": 2,
    "col_end": 8,
    "desc": "options!",
    "filepath": undefined,
    "jsfbt": "A string that moved files",
    "line_beg": 2,
    "line_end": 5,
    "project": "Super Secret",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should be able to nest within React nodes" 1`] = `
Array [
  Object {
    "col_beg": 20,
    "col_end": 55,
    "desc": "nested!",
    "filepath": undefined,
    "jsfbt": "A nested string",
    "line_beg": 3,
    "line_end": 3,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should convert simple strings" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "It's simple",
    "filepath": undefined,
    "jsfbt": "A simple string",
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should deduplicate branches when fbt.enum() calls share the same key" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 18,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should get project from docblock" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 52,
    "desc": "It's simple",
    "filepath": undefined,
    "jsfbt": "Also simple string",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle duplicate enums" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 19,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle enums (with array values)" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enum as an array",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "groups": "Click to see groups",
        "photos": "Click to see photos",
        "videos": "Click to see videos",
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle enums (with value map)" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enum as an object",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "id1": "Click to see groups",
        "id2": "Click to see photos",
        "id3": "Click to see videos",
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle enums with more text after" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "groups": "Hello, groups!",
        "photos": "Hello, photos!",
        "videos": "Hello, videos!",
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle multiple plurals with no showCount (i.e. no named params)" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
        Object {
          "singular": true,
          "token": "number",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "There are {number} likes",
        },
        "_1": Object {
          "_1": "There is a like",
        },
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle names" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "names",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "name",
          "type": 1,
        },
      ],
      "t": Object {
        "*": "You just friended {name}",
      },
    },
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle object pronoun" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 9,
    "desc": "object pronoun",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "*": "You wished them a happy birthday.",
        "3": "You wished her a happy birthday.",
        "4": "You wished him a happy birthday.",
      },
    },
    "line_beg": 2,
    "line_end": 9,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle params" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "Moar params",
    "filepath": undefined,
    "jsfbt": "A parameterized message to {personName}",
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle plurals that have different count variables" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "singular": true,
          "token": "cat_token",
          "type": 2,
        },
        Object {
          "singular": true,
          "token": "dog_token",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "{cat_token} cats and {dog_token} dogs",
          "_1": "{cat_token} cats and 1 dog",
        },
        "_1": Object {
          "*": "1 cat and {dog_token} dogs",
          "_1": "1 cat and 1 dog",
        },
      },
    },
    "line_beg": 2,
    "line_end": 9,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle plurals that share the same count variable" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
        Object {
          "singular": true,
          "token": "number",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "There were {number} likes",
        },
        "_1": Object {
          "_1": "There was a like",
        },
      },
    },
    "line_beg": 2,
    "line_end": 9,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle possessive pronoun" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 9,
    "desc": "possessive pronoun",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "*": "It is their birthday.",
        "3": "It is her birthday.",
        "4": "It is his birthday.",
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle subject and reflexive pronouns" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 9,
    "desc": "subject+reflexive pronouns",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
        null,
      ],
      "t": Object {
        "*": Object {
          "*": "They wished themselves a happy birthday.",
        },
        "3": Object {
          "3": "She wished herself a happy birthday.",
        },
        "4": Object {
          "4": "He wished himself a happy birthday.",
        },
      },
    },
    "line_beg": 2,
    "line_end": 9,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle variations + same param" 1`] = `
Array [
  Object {
    "col_beg": 6,
    "col_end": 7,
    "desc": "test variations + sameParam",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "count",
          "type": 2,
        },
      ],
      "t": Object {
        "*": "You have {count} likes. Comment on it to get more than {count} likes",
      },
    },
    "line_beg": 3,
    "line_end": 11,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handle variations" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "variations!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "count",
          "type": 2,
        },
      ],
      "t": Object {
        "*": "Click to see {count} links",
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should handler wrapping parens" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 14,
    "col_end": 7,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 8,
    "line_end": 13,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 14,
    "col_end": 7,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 14,
    "line_end": 19,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should insert param in place of fbt.sameParam if it exists" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "d",
    "filepath": undefined,
    "jsfbt": "{name1} and {name1}",
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should maintain intra-argument newlines" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "a",
    "filepath": undefined,
    "jsfbt": "{name1} blah {name2}",
    "line_beg": 2,
    "line_end": 17,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should maintain newlines when using string templates" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "blah",
    "filepath": undefined,
    "jsfbt": "A simple string... with some other stuff.",
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using array arguments: Meta-data collection should collect correct meta data for scenario "should maintain newlines within arguments" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "a",
    "filepath": undefined,
    "jsfbt": "a b {name1} c d {name2} e",
    "line_beg": 2,
    "line_end": 13,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should accept well-formed options" 1`] = `
Array [
  Object {
    "author": "jwatson",
    "col_beg": 2,
    "col_end": 8,
    "desc": "options!",
    "filepath": undefined,
    "jsfbt": "A string that moved files",
    "line_beg": 2,
    "line_end": 5,
    "project": "Super Secret",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should allow description concatenation" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "With a ridiculously long description that requires concatenation",
    "filepath": undefined,
    "jsfbt": "A short string",
    "line_beg": 2,
    "line_end": 6,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should be able to nest within React nodes" 1`] = `
Array [
  Object {
    "col_beg": 20,
    "col_end": 53,
    "desc": "nested!",
    "filepath": undefined,
    "jsfbt": "A nested string",
    "line_beg": 3,
    "line_end": 3,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should convert simple strings" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 47,
    "desc": "It's simple",
    "filepath": undefined,
    "jsfbt": "A simple string",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should deduplicate branches when fbt.enum() calls share the same key in string templates" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "groups",
            "photos",
            "videos",
          ],
        },
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 13,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should deduplicate branches when fbt.enum() calls share the same key" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "groups",
            "photos",
            "videos",
          ],
        },
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 17,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should get project from docblock" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 50,
    "desc": "It's simple",
    "filepath": undefined,
    "jsfbt": "Also simple string",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle duplicate enums" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "groups",
            "photos",
            "videos",
          ],
        },
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 17,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle enums (with array values)" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enum as an array",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "groups",
            "photos",
            "videos",
          ],
        },
      ],
      "t": Object {
        "groups": "Click to see groups",
        "photos": "Click to see photos",
        "videos": "Click to see videos",
      },
    },
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle enums (with value map)" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enum as an object",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "id1",
            "id2",
            "id3",
          ],
        },
      ],
      "t": Object {
        "id1": "Click to see groups",
        "id2": "Click to see photos",
        "id3": "Click to see videos",
      },
    },
    "line_beg": 2,
    "line_end": 6,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle enums with more text after" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "groups",
            "photos",
            "videos",
          ],
        },
      ],
      "t": Object {
        "groups": "Hello, groups!",
        "photos": "Hello, photos!",
        "videos": "Hello, videos!",
      },
    },
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle multiple plurals with no showCount (i.e. no named params)" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 2,
        },
        Object {
          "singular": true,
          "token": "number",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "There are {number} likes",
        },
        "_1": Object {
          "_1": "There is a like",
        },
      },
    },
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle names" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "names",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "name",
          "type": 1,
        },
      ],
      "t": Object {
        "*": "You just friended {name}",
      },
    },
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle object pronoun" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 9,
    "desc": "object pronoun",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 3,
        },
      ],
      "t": Object {
        "*": "You wished them a happy birthday.",
        "3": "You wished her a happy birthday.",
        "4": "You wished him a happy birthday.",
      },
    },
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle params" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "Moar params",
    "filepath": undefined,
    "jsfbt": "A parameterized message to {personName}",
    "line_beg": 2,
    "line_end": 6,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle plurals that have different count variables" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "singular": true,
          "token": "cat_token",
          "type": 2,
        },
        Object {
          "singular": true,
          "token": "dog_token",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "{cat_token} cats and {dog_token} dogs",
          "_1": "{cat_token} cats and 1 dog",
        },
        "_1": Object {
          "*": "1 cat and {dog_token} dogs",
          "_1": "1 cat and 1 dog",
        },
      },
    },
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle plurals that share the same count variable" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 2,
        },
        Object {
          "singular": true,
          "token": "number",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "There were {number} likes",
        },
        "_1": Object {
          "_1": "There was a like",
        },
      },
    },
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle possessive pronoun" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 9,
    "desc": "possessive pronoun",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 3,
        },
      ],
      "t": Object {
        "*": "It is their birthday.",
        "3": "It is her birthday.",
        "4": "It is his birthday.",
      },
    },
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle subject and reflexive pronouns" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 9,
    "desc": "subject+reflexive pronouns",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 3,
        },
        Object {
          "type": 3,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "They wished themselves a happy birthday.",
        },
        "3": Object {
          "3": "She wished herself a happy birthday.",
        },
        "4": Object {
          "4": "He wished himself a happy birthday.",
        },
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle variations + same param" 1`] = `
Array [
  Object {
    "col_beg": 6,
    "col_end": 7,
    "desc": "test variations + sameParam",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "count",
          "type": 2,
        },
      ],
      "t": Object {
        "*": "You have {count} likes. Comment on it to get more than {count} likes",
      },
    },
    "line_beg": 3,
    "line_end": 10,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handle variations" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "variations!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "count",
          "type": 2,
        },
      ],
      "t": Object {
        "*": "Click to see {count} links",
      },
    },
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should handler wrapping parens" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 52,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 14,
    "col_end": 58,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 3,
    "line_end": 3,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 14,
    "col_end": 58,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 4,
    "line_end": 4,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should insert param in place of fbt.sameParam if it exists" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "d",
    "filepath": undefined,
    "jsfbt": "{name1} and {name1}",
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should maintain intra-argument newlines" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "a",
    "filepath": undefined,
    "jsfbt": "{name1} blah {name2}",
    "line_beg": 2,
    "line_end": 16,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should maintain newlines when using string templates" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "blah",
    "filepath": undefined,
    "jsfbt": "A simple string... with some other stuff.",
    "line_beg": 2,
    "line_end": 6,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should maintain newlines within arguments" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "a",
    "filepath": undefined,
    "jsfbt": "a b {name1} c d {name2} e",
    "line_beg": 2,
    "line_end": 12,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data (react native) for scenario "should maintain newlines" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "blah",
    "filepath": undefined,
    "jsfbt": "A simple string... with some other stuff.",
    "line_beg": 2,
    "line_end": 6,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should accept well-formed options" 1`] = `
Array [
  Object {
    "author": "jwatson",
    "col_beg": 2,
    "col_end": 8,
    "desc": "options!",
    "filepath": undefined,
    "jsfbt": "A string that moved files",
    "line_beg": 2,
    "line_end": 5,
    "project": "Super Secret",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should allow description concatenation" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "With a ridiculously long description that requires concatenation",
    "filepath": undefined,
    "jsfbt": "A short string",
    "line_beg": 2,
    "line_end": 6,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should be able to nest within React nodes" 1`] = `
Array [
  Object {
    "col_beg": 20,
    "col_end": 53,
    "desc": "nested!",
    "filepath": undefined,
    "jsfbt": "A nested string",
    "line_beg": 3,
    "line_end": 3,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should convert simple strings" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 47,
    "desc": "It's simple",
    "filepath": undefined,
    "jsfbt": "A simple string",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should deduplicate branches when fbt.enum() calls share the same key in string templates" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 13,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should deduplicate branches when fbt.enum() calls share the same key" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 17,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should get project from docblock" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 50,
    "desc": "It's simple",
    "filepath": undefined,
    "jsfbt": "Also simple string",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle duplicate enums" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 17,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle enums (with array values)" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enum as an array",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "groups": "Click to see groups",
        "photos": "Click to see photos",
        "videos": "Click to see videos",
      },
    },
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle enums (with value map)" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enum as an object",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "id1": "Click to see groups",
        "id2": "Click to see photos",
        "id3": "Click to see videos",
      },
    },
    "line_beg": 2,
    "line_end": 6,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle enums with more text after" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "groups": "Hello, groups!",
        "photos": "Hello, photos!",
        "videos": "Hello, videos!",
      },
    },
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle multiple plurals with no showCount (i.e. no named params)" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
        Object {
          "singular": true,
          "token": "number",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "There are {number} likes",
        },
        "_1": Object {
          "_1": "There is a like",
        },
      },
    },
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle names" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "names",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "name",
          "type": 1,
        },
      ],
      "t": Object {
        "*": "You just friended {name}",
      },
    },
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle object pronoun" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 9,
    "desc": "object pronoun",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "*": "You wished them a happy birthday.",
        "3": "You wished her a happy birthday.",
        "4": "You wished him a happy birthday.",
      },
    },
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle params" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "Moar params",
    "filepath": undefined,
    "jsfbt": "A parameterized message to {personName}",
    "line_beg": 2,
    "line_end": 6,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle plurals that have different count variables" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "singular": true,
          "token": "cat_token",
          "type": 2,
        },
        Object {
          "singular": true,
          "token": "dog_token",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "{cat_token} cats and {dog_token} dogs",
          "_1": "{cat_token} cats and 1 dog",
        },
        "_1": Object {
          "*": "1 cat and {dog_token} dogs",
          "_1": "1 cat and 1 dog",
        },
      },
    },
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle plurals that share the same count variable" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
        Object {
          "singular": true,
          "token": "number",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "There were {number} likes",
        },
        "_1": Object {
          "_1": "There was a like",
        },
      },
    },
    "line_beg": 2,
    "line_end": 7,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle possessive pronoun" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 9,
    "desc": "possessive pronoun",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "*": "It is their birthday.",
        "3": "It is her birthday.",
        "4": "It is his birthday.",
      },
    },
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle subject and reflexive pronouns" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 9,
    "desc": "subject+reflexive pronouns",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
        null,
      ],
      "t": Object {
        "*": Object {
          "*": "They wished themselves a happy birthday.",
        },
        "3": Object {
          "3": "She wished herself a happy birthday.",
        },
        "4": Object {
          "4": "He wished himself a happy birthday.",
        },
      },
    },
    "line_beg": 2,
    "line_end": 8,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle variations + same param" 1`] = `
Array [
  Object {
    "col_beg": 6,
    "col_end": 7,
    "desc": "test variations + sameParam",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "count",
          "type": 2,
        },
      ],
      "t": Object {
        "*": "You have {count} likes. Comment on it to get more than {count} likes",
      },
    },
    "line_beg": 3,
    "line_end": 10,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handle variations" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "variations!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "count",
          "type": 2,
        },
      ],
      "t": Object {
        "*": "Click to see {count} links",
      },
    },
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should handler wrapping parens" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 52,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 14,
    "col_end": 58,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 3,
    "line_end": 3,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 14,
    "col_end": 58,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 4,
    "line_end": 4,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should insert param in place of fbt.sameParam if it exists" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "d",
    "filepath": undefined,
    "jsfbt": "{name1} and {name1}",
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should maintain intra-argument newlines" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "a",
    "filepath": undefined,
    "jsfbt": "{name1} blah {name2}",
    "line_beg": 2,
    "line_end": 16,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should maintain newlines when using string templates" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "blah",
    "filepath": undefined,
    "jsfbt": "A simple string... with some other stuff.",
    "line_beg": 2,
    "line_end": 6,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should maintain newlines within arguments" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "a",
    "filepath": undefined,
    "jsfbt": "a b {name1} c d {name2} e",
    "line_beg": 2,
    "line_end": 12,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Functional FBT API using string-concatenated arguments: Meta-data collection should collect correct meta data for scenario "should maintain newlines" 1`] = `
Array [
  Object {
    "col_beg": 10,
    "col_end": 7,
    "desc": "blah",
    "filepath": undefined,
    "jsfbt": "A simple string... with some other stuff.",
    "line_beg": 2,
    "line_end": 6,
    "project": "",
    "type": "text",
  },
]
`;
